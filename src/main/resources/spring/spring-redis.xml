<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
               <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>
   
   	<!-- 下面注释的是非集群模式下用redis共享session的配置。依赖的spring-data-redis版本是1.5.2.RELEASE -->
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>

    <bean id="jedisConnFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
        p:use-pool="true" p:pool-config-ref="poolConfig" />
    
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="jedisConnFactory" />  -->
    <!-- 下面注释的是集群模式下用redis共享session的配置。依赖的spring-data-redis版本是1.7.2.RELEASE -->
    <bean id="jedisConnFactory" class="com.tuxt.item.common.MyJedisConnectionFactory" factory-method="jedisConnectionFactory"></bean>
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnFactory" />
    	<property name="keySerializer" ref="stringRedisSerializer" />
   		 <property name="hashKeySerializer" ref="stringRedisSerializer" />
   		 <property name="defaultSerializer"  ref="stringRedisSerializer"></property>
    </bean>
</beans>